from quart import Quart, render_template
import uvicorn

{%- if config['backend']['api'] +%}
import api
{%- endif +%}
{%- if config['backend']['html_routes'] +%}
import html_routes
{%- endif +%}

# returns a fully configured Quart application
def create_app(webweaver_config=None):
    {%- set template_dir = config['set_up']['project_directory'] + config['set_up']['project_name'] + "/" + config['frontend']['framework'] +%}
    {%- set static_dir   = config['set_up']['project_directory'] + config['set_up']['project_name'] + "/" + config['frontend']['framework'] + "/static" +%}
    app = Quart(__name__, template_folder="{{ template_dir }}", static_folder="{{ static_dir }}")

    # registers all of your top level routes / (HMTL routes), /api (JSON API routes)
    {%- if config['backend']['api'] +%}
    app.register_blueprint(api.bp)
    {%- endif +%}
    {%- if config['backend']['html_routes'] +%}
    app.register_blueprint(html_routes.bp)
    {%- endif +%}

    # this config file is used by WebWeaver to ensure your web app does exactly what you specified
    if webweaver_config:
        app.config.update(webweaver_config)
    
    # Before serving the webserver: initialize the database connection; if the project has one
    # @app.before_serving
    # async def before_serving():
    #     await setup_database()

    # this is the default index route; template served depends on website type + plugins chose
    @app.route("/")
    async def index():
        return await render_template('hello_world.html')

    return app

# Creates the Quart application (must be outside __main__ so uvicorn can use reload)
app = create_app()

{%- set cert_path = config['set_up']['project_directory'] + config['set_up']['project_name'] + "/" + config['backend']['framework'] +%}

# when running python app.py can optionally specify host / port to run the webserver on a specific ip:port
if __name__ == "__main__":   
    # creates your Quart app and runs it with ASGI uvicorn
    uvicorn.run("app:app", host="{{ config['backend']['ip'] }}", port={{ config['backend']['port'] }}, reload=True {%+ if config['set_up']['generate_https_cert_key'] -%} 
    , ssl_keyfile="{{ cert_path }}/secrets/priv_key.pem", ssl_certfile="{{ cert_path }}/secrets/pub_cert.pem" {%- endif +%})
